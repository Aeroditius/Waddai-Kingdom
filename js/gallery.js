document.addEventListener('DOMContentLoaded', function() {
    // Wait a bit for the content to be generated by script.js
    setTimeout(initializeGallery, 200);
});

// Listen for language changes
document.addEventListener('languageSwitch', function(event) {
    // Wait for content to be updated, then reinitialize gallery
    setTimeout(() => {
        initializeGallery();
    }, 500);
});

// Also listen for content updates
document.addEventListener('contentUpdated', function(event) {
    if (event.detail && event.detail.section === 'gallery') {
        setTimeout(() => {
            initializeGallery();
        }, 100);
    }
});

function initializeGallery() {
    const galleryItems = document.querySelectorAll('.gallery-item');

    if (galleryItems.length === 0) {
        setTimeout(initializeGallery, 500);
        return;
    }

    // Check if lightbox exists
    const lightbox = document.querySelector('.lightbox');
    if (!lightbox) {
        return;
    }
    
    const lightboxImg = lightbox.querySelector('img');
    const lightboxCaption = lightbox.querySelector('.lightbox-caption');
    const closeBtn = lightbox.querySelector('.lightbox-close');
    const prevBtn = lightbox.querySelector('.prev');
    const nextBtn = lightbox.querySelector('.next');
    let currentIndex = 0;

    // Clear any existing event listeners to prevent duplicates
    clearGalleryEventListeners();

    // Store functions for proper event listener removal
    window.galleryEventHandlers = window.galleryEventHandlers || {};

    // Initialize gallery items
    galleryItems.forEach((item, index) => {
        const img = item.querySelector('img');
        
        if (img) {
            // Images already have proper src attributes, just add error handling
            img.onerror = function() {
                this.src = 'images/bag.jpg'; // Fallback to a known good image
            };
        }

        // Remove existing click listeners before adding new ones
        const newItem = item.cloneNode(true);
        item.parentNode.replaceChild(newItem, item);
        
        // Open lightbox when clicking on a gallery item
        newItem.addEventListener('click', () => {
            currentIndex = index;
            updateLightbox();
            lightbox.classList.add('active');
            document.body.style.overflow = 'hidden';
        });
    });

    // Refresh gallery items after cloning
    const refreshedGalleryItems = document.querySelectorAll('.gallery-item');

    // Define event handler functions
    window.galleryEventHandlers.closeLightbox = function() {
        lightbox.classList.remove('active');
        document.body.style.overflow = '';
    };

    window.galleryEventHandlers.lightboxClickOutside = function(e) {
        if (e.target === lightbox) {
            lightbox.classList.remove('active');
            document.body.style.overflow = '';
        }
    };

    window.galleryEventHandlers.goToPrevious = function(e) {
        e.stopPropagation();
        currentIndex = (currentIndex - 1 + refreshedGalleryItems.length) % refreshedGalleryItems.length;
        updateLightbox();
    };

    window.galleryEventHandlers.goToNext = function(e) {
        e.stopPropagation();
        currentIndex = (currentIndex + 1) % refreshedGalleryItems.length;
        updateLightbox();
    };

    window.galleryEventHandlers.handleKeyboard = function(e) {
        if (!lightbox.classList.contains('active')) return;

        switch(e.key) {
            case 'Escape':
                lightbox.classList.remove('active');
                document.body.style.overflow = '';
                break;
            case 'ArrowLeft':
                currentIndex = (currentIndex - 1 + refreshedGalleryItems.length) % refreshedGalleryItems.length;
                updateLightbox();
                break;
            case 'ArrowRight':
                currentIndex = (currentIndex + 1) % refreshedGalleryItems.length;
                updateLightbox();
                break;
        }
    };

    window.galleryEventHandlers.handleTouchStart = function(e) {
        window.galleryEventHandlers.touchStartX = e.changedTouches[0].screenX;
    };

    window.galleryEventHandlers.handleTouchEnd = function(e) {
        window.galleryEventHandlers.touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
    };

    // Close lightbox
    closeBtn.addEventListener('click', window.galleryEventHandlers.closeLightbox);

    // Close lightbox when clicking outside the image
    lightbox.addEventListener('click', window.galleryEventHandlers.lightboxClickOutside);

    // Navigate to previous image
    prevBtn.addEventListener('click', window.galleryEventHandlers.goToPrevious);

    // Navigate to next image
    nextBtn.addEventListener('click', window.galleryEventHandlers.goToNext);

    // Keyboard navigation
    document.addEventListener('keydown', window.galleryEventHandlers.handleKeyboard);

    // Touch events
    lightbox.addEventListener('touchstart', window.galleryEventHandlers.handleTouchStart);
    lightbox.addEventListener('touchend', window.galleryEventHandlers.handleTouchEnd);

    // Update lightbox content
    function updateLightbox() {
        const currentItem = refreshedGalleryItems[currentIndex];
        const img = currentItem.querySelector('img');
        const imgSrc = img.src;
        const imgAlt = img.alt;
        const caption = currentItem.querySelector('.gallery-caption h3').textContent;
        const description = currentItem.querySelector('.gallery-caption p').textContent;

        lightboxImg.src = imgSrc;
        lightboxImg.alt = imgAlt;
        lightboxCaption.innerHTML = `<h3>${caption}</h3><p>${description}</p>`;

        // Add fade-in animation
        lightboxImg.style.opacity = '0';
        setTimeout(() => {
            lightboxImg.style.opacity = '1';
        }, 50);
    }

    function handleSwipe() {
        const swipeThreshold = 50;
        const startX = window.galleryEventHandlers.touchStartX || 0;
        const endX = window.galleryEventHandlers.touchEndX || 0;
        const diff = startX - endX;

        if (Math.abs(diff) > swipeThreshold) {
            if (diff > 0) {
                // Swipe left - next image
                currentIndex = (currentIndex + 1) % refreshedGalleryItems.length;
            } else {
                // Swipe right - previous image
                currentIndex = (currentIndex - 1 + refreshedGalleryItems.length) % refreshedGalleryItems.length;
            }
            updateLightbox();
        }
    }
}

function clearGalleryEventListeners() {
    // Clear any existing listeners to prevent memory leaks
    const lightbox = document.querySelector('.lightbox');
    if (lightbox && window.galleryEventHandlers) {
        const closeBtn = lightbox.querySelector('.lightbox-close');
        const prevBtn = lightbox.querySelector('.prev');
        const nextBtn = lightbox.querySelector('.next');
        
        if (closeBtn) closeBtn.removeEventListener('click', window.galleryEventHandlers.closeLightbox);
        if (prevBtn) prevBtn.removeEventListener('click', window.galleryEventHandlers.goToPrevious);
        if (nextBtn) nextBtn.removeEventListener('click', window.galleryEventHandlers.goToNext);
        
        lightbox.removeEventListener('click', window.galleryEventHandlers.lightboxClickOutside);
        lightbox.removeEventListener('touchstart', window.galleryEventHandlers.handleTouchStart);
        lightbox.removeEventListener('touchend', window.galleryEventHandlers.handleTouchEnd);
        
        document.removeEventListener('keydown', window.galleryEventHandlers.handleKeyboard);
    }
}

// Make gallery reinitialization available globally
window.reinitializeGallery = initializeGallery; 